// Prisma schema file

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int           @id @default(autoincrement())
  name             String?
  phone            String        @unique
  countryCode      String?
  Role             Role          @default(User)
  password         String
  resetToken       String?
  resetTokenExpiry DateTime?
  Bet              Bet[]
  Screenshot       Screenshot[]
  Transaction      Transaction[]
  balance          Int?
  amount           Int?
  BankAccount      BankAccount[]
}

model Transaction {
  id            Int      @id @default(autoincrement())
  deposit       Int
  withdrawal    Int?
  user          User     @relation(fields: [userId], references: [id])
  userId        Int
  transactionId String
  betAmount     Int?
  createdAt     DateTime @default(now())
}

enum Role {
  SuperAdmin
  Admin
  User
}

model Bet {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  color     String
  betAmount Int
  payout    Int?
  isWinner  Boolean?
  createdAt DateTime @default(now())
}

model Session {
  id        Int       @id @default(autoincrement())
  color     String
  createdAt DateTime  @default(now())
  startTime DateTime?
}

model Qr {
  id        Int      @id @default(autoincrement())
  qrcode    String
  createdAt DateTime @default(now())
}

model Screenshot {
  id         Int      @id @default(autoincrement())
  screenshot String
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  createdAt  DateTime @default(now())
}

model Withdrawal {
  id               Int         @id @default(autoincrement())
  amountToWithdraw Int
  phoneNumber      String
  bankAccount      BankAccount @relation(fields: [bankAccountId], references: [id])
  bankAccountId    Int
}

model BankAccount {
  id                Int          @id @default(autoincrement())
  accountNumber     String
  IFSCCode          String
  accountMemberName String
  withdrawals       Withdrawal[]
  user              User         @relation(fields: [userId], references: [id])
  userId            Int
}
